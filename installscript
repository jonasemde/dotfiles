#!/bin/bash

# hide "last login" line when starting a new terminal session
touch $HOME/.hushlogin

# install zsh
echo 'install oh-my-zhs'
echo '-----------------'
rm -rf $HOME/.oh-my-zsh
sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
chsh -s $(which zsh)

git clone https://github.com/jessarcher/zsh-artisan.git $HOME/.oh-my-zsh/custom/plugins/artisan

# symlink bash_profile
rm $HOME/.bash_profile
ln -s $HOME/.dotfiles/shell/.bash_profile $HOME/.bash_profile

# symlink profile
rm $HOME/.profile
ln -s $HOME/.dotfiles/shell/.bash_profile $HOME/.profile

# symlink zsh prefs
rm $HOME/.zshrc
ln -s $HOME/.dotfiles/shell/.zshrc $HOME/.zshrc

# symlink vim prefs
rm $HOME/.vimrc
ln -s $HOME/.dotfiles/shell/.vimrc $HOME/.vimrc

# vim config
rm -R $HOME/.vim
ln -s $HOME/.dotfiles/shell/.vim $HOME/.vim

echo 'Install homebrew'
echo '----------------'
echo install homebrew
sudo rm -rf /usr/local/Cellar /usr/local/.git && brew cleanup
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"

echo 'install git'
echo '------------'
brew install git

# global git config
ln -s $HOME/.dotfiles/shell/.gitconfig $HOME/.gitconfig

# global gitigore
ln -s $HOME/.dotfiles/shell/.global-gitignore $HOME/.global-gitignore
git config --global core.excludesfile $HOME/.global-gitignore

echo 'install httrack'
echo '-------------'
brew install httrack

echo 'install z'
echo '-------------'
brew install z

#activate z
cd ~/.dotfiles/shell
chmod +x z.sh

echo 'Install ack'
echo '-----------'
brew install ack

echo 'Install php'
echo '-----------'
brew install php
brew install php@7.4

echo 'Install node'
echo '-----------'
brew install node

echo 'Configure npm'
echo '-------------'
# Create a directory for global packages and tell npm where to store globally installed packages
mkdir "${HOME}/.npm-packages"
npm config set prefix "${HOME}/.npm-packages"

echo 'Install zsh-autosuggestions'
echo '---------------------------'
brew install zsh-autosuggestions

echo 'install yarn'
echo '------------'
brew install yarn

echo 'install svgo'
echo '------------'
npm install -g svgo

echo 'Install imagemagick'
echo '-------------------'
brew install imagemagick

echo 'Install composer'
echo '----------------'
EXPECTED_COMPOSER_CHECKSUM="$(curl https://composer.github.io/installer.sig)"
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
ACTUAL_COMPOSER_CHECKSUM="$(php -r "echo hash_file('sha384', 'composer-setup.php');")"
if [ "$EXPECTED_COMPOSER_CHECKSUM" != "$ACTUAL_COMPOSER_CHECKSUM" ]
then
    >&2 echo 'ERROR: Invalid installer checksum'
    rm composer-setup.php
    exit 1
fi
php composer-setup.php
rm composer-setup.php
mkdir -p /usr/local/bin
mv composer.phar /usr/local/bin/composer

echo 'install valet'
echo '------------'
composer global require laravel/valet
valet install
cd ~/Sites
valet park

echo 'install mailhog'
echo '------------'
brew install mailhog
brew services start mailhog
valet proxy mailhog.test http://127.0.0.1:8025

echo 'Install some nice quicklook plugins'
echo '-----------------------------------'
brew install --cask qlcolorcode qlstephen qlmarkdown quicklook-json qlprettypatch quicklook-csv betterzip  suspicious-package


# echo 'install system apps'
# echo '------------'
# brew cask install --force screaming-frog-seo-spider sketch alfred google-hangouts spotify anydesk google-web-designer sublime-text balenaetcher grammarly tableplus bartender iterm2 teamviewer calibre lingo the-unarchiver craftmanager macdown tower diffmerge mamp vlc docker moom whatsapp dropbox phpstorm xmind evernote poedit zeplin firefox postman

echo '++++++++++++++++++++++++++++++'
echo '++++++++++++++++++++++++++++++'
echo 'All done!'
echo 'Things to do to make the agnoster terminal theme work:'
echo '1. Install menlo patched font included in ~/.dotfiles/misc https://gist.github.com/qrush/1595572/raw/Menlo-Powerline.otf'
echo '2. Install patched solarized theme included in ~/.dotfiles/misc'

echo '++++++++++++++++++++++++++++++'
echo 'Some optional tidbits'

echo '1. Make sure dropbox is running first. If you have not backed up via Mackup yet, then run `mackup backup` to symlink preferences for a wide collection of apps to your dropbox. If you already had a backup via mackup run `mackup restore` You'\''ll find more info on Mackup here: https://github.com/lra/mackup.'
echo '2. Set some sensible os x defaults by running: $HOME/.dotfiles/macos/set-defaults.sh'
echo '3. Make a .dotfiles-custom/shell/.aliases for your personal commands'

echo '++++++++++++++++++++++++++++++'
echo '++++++++++++++++++++++++++++++'
